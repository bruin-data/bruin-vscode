{
  "name": "bruin",
  "displayName": "Bruin",
  "description": "Manage your Bruin data assets from within VS Code.",
  "version": "0.63.0",
  "engines": {
    "vscode": "^1.87.0"
  },
  "icon": "img/bruin-logo-sm128.png",
  "categories": [
    "Data Science",
    "Formatters"
  ],
  "main": "./out/extension/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/bruin-data/bruin-vscode"
  },
  "publisher": "bruin",
  "activationEvents": [
    "workspaceContains:.bruin.yml",
    "workspaceContains:pipeline.yml"
  ],
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "contributes": {
    "yamlValidation": [
      {
        "fileMatch": [
          ".bruin.yml",
          ".bruin.yaml"
        ],
        "url": "./schemas/config-schema.json"
      },
      {
        "fileMatch": [
          "pipeline.yml",
          "pipeline.yaml"
        ],
        "url": "./schemas/pipeline-schema.json"
      },
      {
        "fileMatch": [
          "*.asset.yml",
          "*.asset.yaml"
        ],
        "url": "./schemas/yaml-assets-schema.json"
      }
    ],
    "languages": [
      {
        "id": "sql",
        "extensions": [
          ".sql"
        ],
        "configuration": "./syntaxes/bruin-sql-injection.json"
      },
      {
        "id": "python",
        "extensions": [
          ".py"
        ],
        "configuration": "./syntaxes/bruin-python-injection.json"
      },
      {
        "id": "yaml",
        "extensions": [
          ".yml",
          ".yaml"
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "bruin",
          "title": "Databases",
          "icon": "$(database)"
        }
      ],
      "panel": [
        {
          "id": "bruin-assetLineageView",
          "title": "Lineage",
          "icon": "$(graph)"
        },
        {
          "id": "QueryPreview",
          "title": "Query Preview",
          "icon": "$(preview)"
        }
      ]
    },
    "views": {
      "bruin": [
        {
          "id": "bruinFavorites",
          "name": "Favorites"
        },
        {
          "id": "bruinConnections",
          "name": "Databases"
        }
      ],
      "bruin-assetLineageView": [
        {
          "type": "webview",
          "id": "bruin.assetLineageView",
          "name": "Asset Lineage"
        }
      ],
      "QueryPreview": [
        {
          "type": "webview",
          "id": "bruin.QueryPreviewView",
          "name": "Query Preview"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Bruin Extension Settings",
      "properties": {
        "bruin.documentation": {
          "markdownDescription": "For more information about using the Bruin extension, please refer to the [Bruin Documentation](https://bruin-data.github.io/bruin/). The documentation provides comprehensive guides and examples to help you get started and make the most of the Bruin extension."
        },
        "bruin.telemetry.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable anonymous usage data collection to help improve the extension."
        },
        "bruin.FoldingState": {
          "type": "string",
          "enum": [
            "folded",
            "expanded"
          ],
          "default": "folded",
          "description": "Sets the default folding state for custom Bruin foldable regions in Python and SQL files."
        },
        "bruin.pathSeparator": {
          "type": "string",
          "default": "/",
          "enum": [
            "/",
            "\\"
          ],
          "description": "The path separator to use when constructing Bruin asset paths."
        },
        "bruin.checkbox.defaultIntervalModifiers": {
          "type": "boolean",
          "default": false,
          "description": "Sets whether the 'Interval-modifiers' checkbox is checked by default."
        },
        "bruin.checkbox.defaultExclusiveEndDate": {
          "type": "boolean",
          "default": true,
          "description": "Sets whether the 'Exclusive-End-Date' checkbox is checked by default."
        },
        "bruin.checkbox.defaultPushMetadata": {
          "type": "boolean",
          "default": false,
          "description": "Sets whether the 'Push-Metadata' checkbox is checked by default."
        },
        "bruin.validate.defaultExcludeTag": {
          "type": "string",
          "default": "",
          "description": "Sets the validate exclude tag to be used with validation commands."
        },
        "bruin.schemas.favorites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "schemaName": {
                "type": "string"
              },
              "connectionName": {
                "type": "string"
              }
            },
            "required": [
              "schemaName",
              "connectionName"
            ]
          },
          "default": [],
          "description": "List of favorite schemas with their connection names."
        },
        "bruin.tables.favorites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tableName": {
                "type": "string"
              },
              "schemaName": {
                "type": "string"
              },
              "connectionName": {
                "type": "string"
              }
            },
            "required": [
              "tableName",
              "schemaName",
              "connectionName"
            ]
          },
          "default": [],
          "description": "List of favorite tables with their schema and connection names."
        },
        "bruin.query.previewSelectedQuery.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Show 'Preview selected query' CodeLens when text is selected in SQL files"
        },
        "bruin.query.timeout": {
          "type": "number",
          "default": 1000,
          "description": "Timeout in seconds for query execution (default: 1000 seconds)"
        }
      }
    },
    "snippets": [
      {
        "language": "sql",
        "path": "./snippets/bruin-asset.code-snippets"
      },
      {
        "language": "sql-bigquery",
        "path": "./snippets/bruin-asset.code-snippets"
      },
      {
        "language": "snowflake-sql",
        "path": "./snippets/bruin-asset.code-snippets"
      },
      {
        "language": "python",
        "path": "./snippets/bruin-asset.code-snippets"
      },
      {
        "language": "yaml",
        "path": "./snippets/bruin-pipeline.code-snippets"
      },
      {
        "language": "yaml",
        "path": "./snippets/bruin-ingestr.code-snippets"
      }
    ],
    "grammars": [
      {
        "path": "./syntaxes/bruin-sql-injection.json",
        "scopeName": "sql.comment.block",
        "injectTo": [
          "source.sql"
        ]
      },
      {
        "path": "./syntaxes/bruin-python-injection.json",
        "scopeName": "python.docstring.block",
        "injectTo": [
          "source.python"
        ]
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "bruin.renderSQL",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "bruin.previewSelectedQuery",
          "when": "editorHasSelection",
          "group": "1_modification"
        }
      ],
      "view/title": [
        {
          "command": "bruin.refreshConnections",
          "when": "view == bruinConnections",
          "group": "navigation"
        },
        {
          "command": "bruin.refreshFavorites",
          "when": "view == bruinFavorites",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "bruin.refreshConnection",
          "when": "view == bruinConnections && viewItem == 'bruin_connection'",
          "group": "inline"
        },
        {
          "command": "bruin.refreshSchema",
          "when": "view == bruinConnections && (viewItem == 'schema_favorite' || viewItem == 'schema_unfavorite') ",
          "group": "inline@2"
        },
        {
          "command": "bruin.refreshSchema",
          "when": "view == bruinFavorites && (viewItem == 'favorite_schema' || viewItem == 'playground')",
          "group": "inline@2"
        },
        {
          "command": "bruin.refreshFavorites",
          "when": "view == bruinFavorites",
          "group": "navigation"
        },
        {
          "command": "bruin.removeFavorite",
          "when": "view == bruinFavorites && viewItem == 'favorite_schema'",
          "group": "inline@1"
        },
        {
          "command": "bruin.removeTableFavorite",
          "when": "view == bruinFavorites && (viewItem == 'favorite_table' || viewItem == 'favorite_table_starred')",
          "group": "inline@1"
        },
        {
          "command": "bruin.addSchemaToFavorites",
          "when": "view == bruinConnections && viewItem == 'schema_unfavorite'",
          "group": "inline@1"
        },
        {
          "command": "bruin.removeSchemaFromFavorites",
          "when": "view == bruinConnections && viewItem == 'schema_favorite'",
          "group": "inline@1"
        },
        {
          "command": "bruin.addTableToFavorites",
          "when": "view == bruinConnections && viewItem == 'table_unfavorite'",
          "group": "inline@1"
        },
        {
          "command": "bruin.removeTableFromFavorites",
          "when": "view == bruinConnections && viewItem == 'table_favorite'",
          "group": "inline@1"
        }
      ]
    },
    "commands": [
      {
        "command": "bruin.renderSQL",
        "title": "Bruin Render",
        "shortTitle": "Bruin",
        "category": "Bruin",
        "icon": "img/bruin-logo-sm128.png",
        "description": "Render a Bruin asset."
      },
      {
        "command": "bruin.refreshConnections",
        "title": "Refresh Connections",
        "category": "Bruin",
        "icon": "$(refresh)",
        "description": "Refresh connections list."
      },
      {
        "command": "bruin.refreshConnection",
        "title": "Refresh Connection",
        "category": "Bruin",
        "icon": "$(refresh)",
        "description": "Refresh a single connection."
      },
      {
        "command": "bruin.refreshSchema",
        "title": "Refresh Schema",
        "category": "Bruin",
        "icon": "$(refresh)",
        "description": "Refresh a single schema."
      },
      {
        "command": "bruin.showConnectionDetails",
        "title": "Show Connection Details",
        "category": "Bruin",
        "icon": "$(info)",
        "description": "Show connection details."
      },
      {
        "command": "bruin.installCli",
        "title": "Install Bruin CLI",
        "category": "Bruin",
        "description": "Install the Bruin CLI."
      },
      {
        "command": "bruin.toggleFoldings",
        "title": "Toggle Folding",
        "category": "Bruin",
        "description": "Toggle the folding state of custom Bruin foldable regions in Python and SQL files."
      },
      {
        "command": "bruin.convertFileToAsset",
        "title": "Convert File to Asset",
        "category": "Bruin",
        "description": "Convert a file to a Bruin asset."
      },
      {
        "command": "bruin.addSchemaToFavorites",
        "title": "Add to Favorites",
        "category": "Bruin",
        "icon": "$(star-empty)",
        "description": "Add schema to favorites."
      },
      {
        "command": "bruin.removeSchemaFromFavorites",
        "title": "Remove from Favorites",
        "category": "Bruin",
        "icon": "$(star-full)",
        "description": "Remove schema from favorites."
      },
      {
        "command": "bruin.refreshFavorites",
        "title": "Refresh Favorites",
        "category": "Bruin",
        "icon": "$(refresh)",
        "description": "Refresh favorites list."
      },
      {
        "command": "bruin.removeFavorite",
        "title": "Remove Favorite",
        "category": "Bruin",
        "icon": "$(star-full)",
        "description": "Remove favorite from list."
      },
      {
        "command": "bruin.addTableToFavorites",
        "title": "Add Table to Favorites",
        "category": "Bruin",
        "icon": "$(star-empty)",
        "description": "Add table to favorites."
      },
      {
        "command": "bruin.removeTableFromFavorites",
        "title": "Remove Table from Favorites",
        "category": "Bruin",
        "icon": "$(star-full)",
        "description": "Remove table from favorites."
      },
      {
        "command": "bruin.removeTableFavorite",
        "title": "Remove Table Favorite",
        "category": "Bruin",
        "icon": "$(star-full)",
        "description": "Remove table from favorites list."
      },
      {
        "command": "bruin.previewSelectedQuery",
        "title": "Preview Selected Query",
        "category": "Bruin",
        "icon": "$(play)",
        "description": "Preview the selected SQL query in the Query Preview panel."
      }
    ],
    "keybindings": [
      {
        "command": "bruin.previewSelectedQuery",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorTextFocus && editorHasSelection && resourceExtname == .sql"
      }
    ],
    "walkthroughs": [
      {
        "id": "bruin-getting-started",
        "title": "Getting Started with Bruin",
        "description": "Learn the essential features and keyboard shortcuts to be productive with Bruin",
        "steps": [
          {
            "id": "keyboard-shortcuts",
            "title": "Essential Keyboard Shortcuts",
            "description": "Master the most important keyboard shortcuts for autocomplete and productivity",
            "media": {
              "markdown": "walkthroughs/keyboard-shortcuts.md"
            }
          },
          {
            "id": "autocomplete-features",
            "title": "Autocomplete & IntelliSense",
            "description": "Discover how autocomplete works in Bruin YAML files and SQL assets",
            "media": {
              "markdown": "walkthroughs/autocomplete-features.md"
            }
          },
          {
            "id": "file-types",
            "title": "Supported File Types",
            "description": "Learn which file types have Bruin support and what features are available",
            "media": {
              "markdown": "walkthroughs/file-types.md"
            }
          },
          {
            "id": "query-preview",
            "title": "Query Preview Features",
            "description": "Use the powerful query preview and lineage features to analyze your data pipeline",
            "media": {
              "markdown": "walkthroughs/query-preview.md"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "install:all": "npm install && cd webview-ui && npm install",
    "start:webview": "cd webview-ui && npm run start",
    "dev:watch": "concurrently -n EXTENSION,WEBVIEW -c yellow,blue \"tsc -watch -p ./\" \"cd webview-ui && npm run watch\"",
    "build:webview": "cd webview-ui && npm run build-only && node scripts/copy-codicons.js",
    "vscode:prepublish": "npm run compile",
    "selenium:setup-tests": "extest setup-tests",
    "selenium:run-tests": "node webview-ui/scripts/copy-test-assets.js && extest setup-and-run './out/ui-test/*.test.js' --code_version 1.103.0 --code_settings settings.json",
    "test": "vscode-test",
    "test:webview": "cd webview-ui && npm run test",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "format": "prettier --write src/**/*.ts",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "tag:patch": "./scripts/tag-helper.sh patch",
    "tag:minor": "./scripts/tag-helper.sh minor",
    "tag:major": "./scripts/tag-helper.sh major"
  },
  "devDependencies": {
    "@tailwindcss/typography": "^0.5.13",
    "@types/fs-extra": "^11.0.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.11.30",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.0",
    "eslint": "^8.57.0",
    "mocha": "^11.0.1",
    "prettier": "^3.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.3",
    "vscode-extension-tester": "^8.17.0",
    "vscode-test": "^1.6.1"
  },
  "overrides": {
    "undici": "^6.21.1"
  },
  "dependencies": {
    "@rudderstack/analytics-js": "^3.11.15",
    "@rudderstack/rudder-sdk-node": "^2.1.1",
    "@tailwindcss/forms": "^0.5.7",
    "@vue-flow/background": "^1.3.0",
    "@vue-flow/controls": "^1.1.1",
    "@vue-flow/core": "^1.43.1",
    "@vue-flow/minimap": "^1.5.3",
    "chokidar": "^4.0.3",
    "concurrently": "^9.0.1",
    "cron-parser": "^4.9.0",
    "dotenv": "^16.4.7",
    "elkjs": "^0.9.3",
    "fs-extra": "^11.3.0",
    "luxon": "^3.4.4",
    "markdown-it": "^14.1.0",
    "proxyquire": "^2.1.3",
    "sinon": "^17.0.1",
    "vue3-virtual-scroller": "^0.2.3"
  }
}
